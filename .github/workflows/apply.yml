name: "Terraform apply"
on: 
  push:
    branches:
    - master
jobs:
  dev:
    name: Dev-deployment
    runs-on: Ubuntu-latest
    environment: dev
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'us-west-2'
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
    - name: Init
      run: terraform init -backend-config=dev.conf
    - name: Terraform Plan
      id: Plan
      if: github.event == "push"
      run:  terraform plan -var-file=dev.tfvars
      continue-on-error: true
    - name: Terraform plan status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Deploy
      if: github.ref == 'refs/head/master' && github.event_name == 'push'
      run: terraform apply -var-file=dev.tfvars -auto-approve
stage:
    name: Stage-deployment
    runs-on: Ubuntu-latest
    environment: stage
    needs: dev
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'us-west-2'
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
    - name: Init
      run: terraform init -backend-config=stage.conf
    - name: Terraform Plan
      id: Plan
      if: github.event == "push"
      run:  terraform plan -var-file=stage.tfvars
      continue-on-error: true
    - name: Terraform plan status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Deploy
      if: github.ref == 'refs/head/master' && github.event_name == 'push'
      run: terraform apply -var-file=stage.tfvars -auto-approve